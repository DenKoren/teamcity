dohq_teamcity.DebugApi
######################################

.. note::

   + All ``serve_*`` method have aliases with get: ``serve_something`` == ``get_something``
   + Some API have ``get`` method - default method to get object by locator (e.g ``agent_api.get('id:123')`` return ``Agent`` model by id
   + See more examples on page :doc:`/examples/api/DebugApi` and model examples
   + This is autogenerated page, don't change them directly, use template. Read more in :doc:`/development`

.. list-table::
   :widths: 20 80
   :header-rows: 1

   * - Method
     - HTTP request
   * - :ref:`delete_current_remember_me`
     - **DELETE** ``/app/rest/debug/currentRequest/rememberMe``
   * - :ref:`empty_task`
     - **POST** ``/app/rest/debug/emptyTask``
   * - :ref:`execute_db_query`
     - **GET** ``/app/rest/debug/database/query/{query}``
   * - :ref:`get_build_chain_optimization_log`
     - **GET** ``/app/rest/debug/buildChainOptimizationLog/{buildLocator}``
   * - :ref:`get_cached_build_promotions`
     - **GET** ``/app/rest/debug/caches/buildPromotions/content``
   * - :ref:`get_cached_build_promotions_stats`
     - **GET** ``/app/rest/debug/caches/buildPromotions/stats``
   * - :ref:`get_cached_builds_stat`
     - **GET** ``/app/rest/debug/caches/builds/stats``
   * - :ref:`get_current_session`
     - **GET** ``/app/rest/debug/currentRequest/session``
   * - :ref:`get_current_session_max_inactive_interval`
     - **GET** ``/app/rest/debug/currentRequest/session/maxInactiveSeconds``
   * - :ref:`get_current_user_permissions`
     - **GET** ``/app/rest/debug/currentUserPermissions``
   * - :ref:`get_date`
     - **GET** ``/app/rest/debug/date/{dateLocator}``
   * - :ref:`get_diagnostics_perf_stats`
     - **GET** ``/app/rest/debug/diagnostics/threadPerfStat/stats``
   * - :ref:`get_environment_variables`
     - **GET** ``/app/rest/debug/jvm/environmentVariables``
   * - :ref:`get_hashed`
     - **GET** ``/app/rest/debug/values/transform/{method}``
   * - :ref:`get_ip_address`
     - **GET** ``/app/rest/debug/dns/lookup/{host}``
   * - :ref:`get_raw_investigations`
     - **GET** ``/app/rest/debug/investigations``
   * - :ref:`get_request_details`
     - **GET** ``/app/rest/debug/currentRequest/details{extra}``
   * - :ref:`get_scrambled`
     - **GET** ``/app/rest/debug/values/password/scrambled``
   * - :ref:`get_sessions`
     - **GET** ``/app/rest/debug/sessions``
   * - :ref:`get_system_properties`
     - **GET** ``/app/rest/debug/jvm/systemProperties``
   * - :ref:`get_thread_dump`
     - **GET** ``/app/rest/debug/threadDump``
   * - :ref:`get_thread_interrupted`
     - **GET** ``/app/rest/debug/threads/{threadLocator}/interrupted``
   * - :ref:`get_unscrambled`
     - **GET** ``/app/rest/debug/values/password/unscrambled``
   * - :ref:`interrupt_thread`
     - **PUT** ``/app/rest/debug/threads/{threadLocator}/interrupted``
   * - :ref:`invalidate_current_session`
     - **DELETE** ``/app/rest/debug/currentRequest/session``
   * - :ref:`list_db_tables`
     - **GET** ``/app/rest/debug/database/tables``
   * - :ref:`new_remember_me`
     - **POST** ``/app/rest/debug/currentRequest/rememberMe``
   * - :ref:`post_request_details`
     - **POST** ``/app/rest/debug/currentRequest/details{extra}``
   * - :ref:`put_request_details`
     - **PUT** ``/app/rest/debug/currentRequest/details{extra}``
   * - :ref:`save_memory_dump`
     - **POST** ``/app/rest/debug/memory/dumps``
   * - :ref:`schedule_checking_for_changes`
     - **POST** ``/app/rest/debug/vcsCheckingForChangesQueue``
   * - :ref:`set_current_session_max_inactive_interval`
     - **PUT** ``/app/rest/debug/currentRequest/session/maxInactiveSeconds``

.. _delete_current_remember_me:

delete_current_remember_me
-----------------

.. code-block:: python

    from pprint import pprint
    from dohq_teamcity import TeamCity, ApiException

    # username/password authentication
    tc = TeamCity("https://teamcity.example.com", auth=('username', 'password'))

    
    try:
        tc.debug_api.delete_current_remember_me()
    except ApiException as e:
        print("Exception when calling DebugApi->delete_current_remember_me: %s\n" % e)


This endpoint does not need any parameter.

Return type:
    void (empty response body)

`Back to top <#>`_

.. _empty_task:

empty_task
-----------------

.. code-block:: python

    from pprint import pprint
    from dohq_teamcity import TeamCity, ApiException

    # username/password authentication
    tc = TeamCity("https://teamcity.example.com", auth=('username', 'password'))

        time = 'time_example' # str |  (optional)
    load = 56 # int |  (optional)
    memory = 56 # int |  (optional)
    memory_chunks = 1 # int |  (optional) (default to 1)

    try:
        api_response = tc.debug_api.empty_task(time=time, load=load, memory=memory, memory_chunks=memory_chunks)
       pprint(api_response)
    except ApiException as e:
        print("Exception when calling DebugApi->empty_task: %s\n" % e)



.. list-table::
   :widths: 20 20 60
   :header-rows: 1

   * - Name
     - Types
     - Notes

   * - **time**
     - **str**
     - [optional] 
   * - **load**
     - **int**
     - [optional] 
   * - **memory**
     - **int**
     - [optional] 
   * - **memory_chunks**
     - **int**
     - [optional] [default to ``1``]

Return type:
    **str**

`Back to top <#>`_

.. _execute_db_query:

execute_db_query
-----------------

.. code-block:: python

    from pprint import pprint
    from dohq_teamcity import TeamCity, ApiException

    # username/password authentication
    tc = TeamCity("https://teamcity.example.com", auth=('username', 'password'))

        query = 'query_example' # str | 
    field_delimiter = ', ' # str |  (optional) (default to , )
    data_retrieve_query = 'data_retrieve_query_example' # str |  (optional)
    count = 1000 # int |  (optional) (default to 1000)

    try:
        api_response = tc.debug_api.execute_db_query(query, field_delimiter=field_delimiter, data_retrieve_query=data_retrieve_query, count=count)
       pprint(api_response)
    except ApiException as e:
        print("Exception when calling DebugApi->execute_db_query: %s\n" % e)



.. list-table::
   :widths: 20 20 60
   :header-rows: 1

   * - Name
     - Types
     - Notes

   * - **query**
     - **str**
     - 
   * - **field_delimiter**
     - **str**
     - [optional] [default to ``, ``]
   * - **data_retrieve_query**
     - **str**
     - [optional] 
   * - **count**
     - **int**
     - [optional] [default to ``1000``]

Return type:
    **str**

`Back to top <#>`_

.. _get_build_chain_optimization_log:

get_build_chain_optimization_log
-----------------

.. code-block:: python

    from pprint import pprint
    from dohq_teamcity import TeamCity, ApiException

    # username/password authentication
    tc = TeamCity("https://teamcity.example.com", auth=('username', 'password'))

        build_locator = 'build_locator_example' # str | 

    try:
        api_response = tc.debug_api.get_build_chain_optimization_log(build_locator)
       pprint(api_response)
    except ApiException as e:
        print("Exception when calling DebugApi->get_build_chain_optimization_log: %s\n" % e)



.. list-table::
   :widths: 20 20 60
   :header-rows: 1

   * - Name
     - Types
     - Notes

   * - **build_locator**
     - **str**
     - 

Return type:
    **str**

`Back to top <#>`_

.. _get_cached_build_promotions:

get_cached_build_promotions
-----------------

.. code-block:: python

    from pprint import pprint
    from dohq_teamcity import TeamCity, ApiException

    # username/password authentication
    tc = TeamCity("https://teamcity.example.com", auth=('username', 'password'))

        build_type_locator = 'build_type_locator_example' # str |  (optional)
    fields = 'fields_example' # str |  (optional)

    try:
        api_response = tc.debug_api.get_cached_build_promotions(build_type_locator=build_type_locator, fields=fields)
       pprint(api_response)
    except ApiException as e:
        print("Exception when calling DebugApi->get_cached_build_promotions: %s\n" % e)



.. list-table::
   :widths: 20 20 60
   :header-rows: 1

   * - Name
     - Types
     - Notes

   * - **build_type_locator**
     - **str**
     - [optional] 
   * - **fields**
     - **str**
     - [optional] 

Return type:
    `Builds <../models/Builds.html>`_

`Back to top <#>`_

.. _get_cached_build_promotions_stats:

get_cached_build_promotions_stats
-----------------

.. code-block:: python

    from pprint import pprint
    from dohq_teamcity import TeamCity, ApiException

    # username/password authentication
    tc = TeamCity("https://teamcity.example.com", auth=('username', 'password'))

        fields = 'fields_example' # str |  (optional)

    try:
        api_response = tc.debug_api.get_cached_build_promotions_stats(fields=fields)
       pprint(api_response)
    except ApiException as e:
        print("Exception when calling DebugApi->get_cached_build_promotions_stats: %s\n" % e)



.. list-table::
   :widths: 20 20 60
   :header-rows: 1

   * - Name
     - Types
     - Notes

   * - **fields**
     - **str**
     - [optional] 

Return type:
    `Properties <../models/Properties.html>`_

`Back to top <#>`_

.. _get_cached_builds_stat:

get_cached_builds_stat
-----------------

.. code-block:: python

    from pprint import pprint
    from dohq_teamcity import TeamCity, ApiException

    # username/password authentication
    tc = TeamCity("https://teamcity.example.com", auth=('username', 'password'))

        fields = 'fields_example' # str |  (optional)

    try:
        api_response = tc.debug_api.get_cached_builds_stat(fields=fields)
       pprint(api_response)
    except ApiException as e:
        print("Exception when calling DebugApi->get_cached_builds_stat: %s\n" % e)



.. list-table::
   :widths: 20 20 60
   :header-rows: 1

   * - Name
     - Types
     - Notes

   * - **fields**
     - **str**
     - [optional] 

Return type:
    `Properties <../models/Properties.html>`_

`Back to top <#>`_

.. _get_current_session:

get_current_session
-----------------

.. code-block:: python

    from pprint import pprint
    from dohq_teamcity import TeamCity, ApiException

    # username/password authentication
    tc = TeamCity("https://teamcity.example.com", auth=('username', 'password'))

        fields = 'fields_example' # str |  (optional)

    try:
        api_response = tc.debug_api.get_current_session(fields=fields)
       pprint(api_response)
    except ApiException as e:
        print("Exception when calling DebugApi->get_current_session: %s\n" % e)



.. list-table::
   :widths: 20 20 60
   :header-rows: 1

   * - Name
     - Types
     - Notes

   * - **fields**
     - **str**
     - [optional] 

Return type:
    `Session <../models/Session.html>`_

`Back to top <#>`_

.. _get_current_session_max_inactive_interval:

get_current_session_max_inactive_interval
-----------------

.. code-block:: python

    from pprint import pprint
    from dohq_teamcity import TeamCity, ApiException

    # username/password authentication
    tc = TeamCity("https://teamcity.example.com", auth=('username', 'password'))

    
    try:
        api_response = tc.debug_api.get_current_session_max_inactive_interval()
       pprint(api_response)
    except ApiException as e:
        print("Exception when calling DebugApi->get_current_session_max_inactive_interval: %s\n" % e)


This endpoint does not need any parameter.

Return type:
    **str**

`Back to top <#>`_

.. _get_current_user_permissions:

get_current_user_permissions
-----------------

.. code-block:: python

    from pprint import pprint
    from dohq_teamcity import TeamCity, ApiException

    # username/password authentication
    tc = TeamCity("https://teamcity.example.com", auth=('username', 'password'))

    
    try:
        api_response = tc.debug_api.get_current_user_permissions()
       pprint(api_response)
    except ApiException as e:
        print("Exception when calling DebugApi->get_current_user_permissions: %s\n" % e)


This endpoint does not need any parameter.

Return type:
    **str**

`Back to top <#>`_

.. _get_date:

get_date
-----------------

.. code-block:: python

    from pprint import pprint
    from dohq_teamcity import TeamCity, ApiException

    # username/password authentication
    tc = TeamCity("https://teamcity.example.com", auth=('username', 'password'))

        date_locator = 'date_locator_example' # str | 
    format = 'format_example' # str |  (optional)
    timezone = 'timezone_example' # str |  (optional)

    try:
        api_response = tc.debug_api.get_date(date_locator, format=format, timezone=timezone)
       pprint(api_response)
    except ApiException as e:
        print("Exception when calling DebugApi->get_date: %s\n" % e)



.. list-table::
   :widths: 20 20 60
   :header-rows: 1

   * - Name
     - Types
     - Notes

   * - **date_locator**
     - **str**
     - 
   * - **format**
     - **str**
     - [optional] 
   * - **timezone**
     - **str**
     - [optional] 

Return type:
    **str**

`Back to top <#>`_

.. _get_diagnostics_perf_stats:

get_diagnostics_perf_stats
-----------------

.. code-block:: python

    from pprint import pprint
    from dohq_teamcity import TeamCity, ApiException

    # username/password authentication
    tc = TeamCity("https://teamcity.example.com", auth=('username', 'password'))

        fields = 'fields_example' # str |  (optional)

    try:
        api_response = tc.debug_api.get_diagnostics_perf_stats(fields=fields)
       pprint(api_response)
    except ApiException as e:
        print("Exception when calling DebugApi->get_diagnostics_perf_stats: %s\n" % e)



.. list-table::
   :widths: 20 20 60
   :header-rows: 1

   * - Name
     - Types
     - Notes

   * - **fields**
     - **str**
     - [optional] 

Return type:
    `Properties <../models/Properties.html>`_

`Back to top <#>`_

.. _get_environment_variables:

get_environment_variables
-----------------

.. code-block:: python

    from pprint import pprint
    from dohq_teamcity import TeamCity, ApiException

    # username/password authentication
    tc = TeamCity("https://teamcity.example.com", auth=('username', 'password'))

        fields = 'fields_example' # str |  (optional)

    try:
        api_response = tc.debug_api.get_environment_variables(fields=fields)
       pprint(api_response)
    except ApiException as e:
        print("Exception when calling DebugApi->get_environment_variables: %s\n" % e)



.. list-table::
   :widths: 20 20 60
   :header-rows: 1

   * - Name
     - Types
     - Notes

   * - **fields**
     - **str**
     - [optional] 

Return type:
    `Properties <../models/Properties.html>`_

`Back to top <#>`_

.. _get_hashed:

get_hashed
-----------------

.. code-block:: python

    from pprint import pprint
    from dohq_teamcity import TeamCity, ApiException

    # username/password authentication
    tc = TeamCity("https://teamcity.example.com", auth=('username', 'password'))

        method = 'method_example' # str | 
    value = 'value_example' # str |  (optional)

    try:
        api_response = tc.debug_api.get_hashed(method, value=value)
       pprint(api_response)
    except ApiException as e:
        print("Exception when calling DebugApi->get_hashed: %s\n" % e)



.. list-table::
   :widths: 20 20 60
   :header-rows: 1

   * - Name
     - Types
     - Notes

   * - **method**
     - **str**
     - 
   * - **value**
     - **str**
     - [optional] 

Return type:
    **str**

`Back to top <#>`_

.. _get_ip_address:

get_ip_address
-----------------

.. code-block:: python

    from pprint import pprint
    from dohq_teamcity import TeamCity, ApiException

    # username/password authentication
    tc = TeamCity("https://teamcity.example.com", auth=('username', 'password'))

        host = 'host_example' # str | 

    try:
        api_response = tc.debug_api.get_ip_address(host)
       pprint(api_response)
    except ApiException as e:
        print("Exception when calling DebugApi->get_ip_address: %s\n" % e)



.. list-table::
   :widths: 20 20 60
   :header-rows: 1

   * - Name
     - Types
     - Notes

   * - **host**
     - **str**
     - 

Return type:
    `Items <../models/Items.html>`_

`Back to top <#>`_

.. _get_raw_investigations:

get_raw_investigations
-----------------

.. code-block:: python

    from pprint import pprint
    from dohq_teamcity import TeamCity, ApiException

    # username/password authentication
    tc = TeamCity("https://teamcity.example.com", auth=('username', 'password'))

        fields = 'fields_example' # str |  (optional)

    try:
        api_response = tc.debug_api.get_raw_investigations(fields=fields)
       pprint(api_response)
    except ApiException as e:
        print("Exception when calling DebugApi->get_raw_investigations: %s\n" % e)



.. list-table::
   :widths: 20 20 60
   :header-rows: 1

   * - Name
     - Types
     - Notes

   * - **fields**
     - **str**
     - [optional] 

Return type:
    `Investigations <../models/Investigations.html>`_

`Back to top <#>`_

.. _get_request_details:

get_request_details
-----------------

.. code-block:: python

    from pprint import pprint
    from dohq_teamcity import TeamCity, ApiException

    # username/password authentication
    tc = TeamCity("https://teamcity.example.com", auth=('username', 'password'))

        extra = 'extra_example' # str | 

    try:
        api_response = tc.debug_api.get_request_details(extra)
       pprint(api_response)
    except ApiException as e:
        print("Exception when calling DebugApi->get_request_details: %s\n" % e)



.. list-table::
   :widths: 20 20 60
   :header-rows: 1

   * - Name
     - Types
     - Notes

   * - **extra**
     - **str**
     - 

Return type:
    **str**

`Back to top <#>`_

.. _get_scrambled:

get_scrambled
-----------------

.. code-block:: python

    from pprint import pprint
    from dohq_teamcity import TeamCity, ApiException

    # username/password authentication
    tc = TeamCity("https://teamcity.example.com", auth=('username', 'password'))

        value = 'value_example' # str |  (optional)

    try:
        api_response = tc.debug_api.get_scrambled(value=value)
       pprint(api_response)
    except ApiException as e:
        print("Exception when calling DebugApi->get_scrambled: %s\n" % e)



.. list-table::
   :widths: 20 20 60
   :header-rows: 1

   * - Name
     - Types
     - Notes

   * - **value**
     - **str**
     - [optional] 

Return type:
    **str**

`Back to top <#>`_

.. _get_sessions:

get_sessions
-----------------

.. code-block:: python

    from pprint import pprint
    from dohq_teamcity import TeamCity, ApiException

    # username/password authentication
    tc = TeamCity("https://teamcity.example.com", auth=('username', 'password'))

        manager = 789 # int |  (optional)
    fields = 'fields_example' # str |  (optional)

    try:
        api_response = tc.debug_api.get_sessions(manager=manager, fields=fields)
       pprint(api_response)
    except ApiException as e:
        print("Exception when calling DebugApi->get_sessions: %s\n" % e)



.. list-table::
   :widths: 20 20 60
   :header-rows: 1

   * - Name
     - Types
     - Notes

   * - **manager**
     - **int**
     - [optional] 
   * - **fields**
     - **str**
     - [optional] 

Return type:
    `Sessions <../models/Sessions.html>`_

`Back to top <#>`_

.. _get_system_properties:

get_system_properties
-----------------

.. code-block:: python

    from pprint import pprint
    from dohq_teamcity import TeamCity, ApiException

    # username/password authentication
    tc = TeamCity("https://teamcity.example.com", auth=('username', 'password'))

        fields = 'fields_example' # str |  (optional)

    try:
        api_response = tc.debug_api.get_system_properties(fields=fields)
       pprint(api_response)
    except ApiException as e:
        print("Exception when calling DebugApi->get_system_properties: %s\n" % e)



.. list-table::
   :widths: 20 20 60
   :header-rows: 1

   * - Name
     - Types
     - Notes

   * - **fields**
     - **str**
     - [optional] 

Return type:
    `Properties <../models/Properties.html>`_

`Back to top <#>`_

.. _get_thread_dump:

get_thread_dump
-----------------

.. code-block:: python

    from pprint import pprint
    from dohq_teamcity import TeamCity, ApiException

    # username/password authentication
    tc = TeamCity("https://teamcity.example.com", auth=('username', 'password'))

        locked_monitors = 'locked_monitors_example' # str |  (optional)
    locked_synchronizers = 'locked_synchronizers_example' # str |  (optional)
    detect_locks = 'detect_locks_example' # str |  (optional)

    try:
        api_response = tc.debug_api.get_thread_dump(locked_monitors=locked_monitors, locked_synchronizers=locked_synchronizers, detect_locks=detect_locks)
       pprint(api_response)
    except ApiException as e:
        print("Exception when calling DebugApi->get_thread_dump: %s\n" % e)



.. list-table::
   :widths: 20 20 60
   :header-rows: 1

   * - Name
     - Types
     - Notes

   * - **locked_monitors**
     - **str**
     - [optional] 
   * - **locked_synchronizers**
     - **str**
     - [optional] 
   * - **detect_locks**
     - **str**
     - [optional] 

Return type:
    **str**

`Back to top <#>`_

.. _get_thread_interrupted:

get_thread_interrupted
-----------------

.. code-block:: python

    from pprint import pprint
    from dohq_teamcity import TeamCity, ApiException

    # username/password authentication
    tc = TeamCity("https://teamcity.example.com", auth=('username', 'password'))

        thread_locator = 'thread_locator_example' # str | 

    try:
        api_response = tc.debug_api.get_thread_interrupted(thread_locator)
       pprint(api_response)
    except ApiException as e:
        print("Exception when calling DebugApi->get_thread_interrupted: %s\n" % e)



.. list-table::
   :widths: 20 20 60
   :header-rows: 1

   * - Name
     - Types
     - Notes

   * - **thread_locator**
     - **str**
     - 

Return type:
    **str**

`Back to top <#>`_

.. _get_unscrambled:

get_unscrambled
-----------------

.. code-block:: python

    from pprint import pprint
    from dohq_teamcity import TeamCity, ApiException

    # username/password authentication
    tc = TeamCity("https://teamcity.example.com", auth=('username', 'password'))

        value = 'value_example' # str |  (optional)

    try:
        api_response = tc.debug_api.get_unscrambled(value=value)
       pprint(api_response)
    except ApiException as e:
        print("Exception when calling DebugApi->get_unscrambled: %s\n" % e)



.. list-table::
   :widths: 20 20 60
   :header-rows: 1

   * - Name
     - Types
     - Notes

   * - **value**
     - **str**
     - [optional] 

Return type:
    **str**

`Back to top <#>`_

.. _interrupt_thread:

interrupt_thread
-----------------

.. code-block:: python

    from pprint import pprint
    from dohq_teamcity import TeamCity, ApiException

    # username/password authentication
    tc = TeamCity("https://teamcity.example.com", auth=('username', 'password'))

        thread_locator = 'thread_locator_example' # str | 
    body = 'body_example' # str |  (optional)

    try:
        api_response = tc.debug_api.interrupt_thread(thread_locator, body=body)
       pprint(api_response)
    except ApiException as e:
        print("Exception when calling DebugApi->interrupt_thread: %s\n" % e)



.. list-table::
   :widths: 20 20 60
   :header-rows: 1

   * - Name
     - Types
     - Notes

   * - **thread_locator**
     - **str**
     - 
   * - **body**
     - **str**
     - [optional] 

Return type:
    **str**

`Back to top <#>`_

.. _invalidate_current_session:

invalidate_current_session
-----------------

.. code-block:: python

    from pprint import pprint
    from dohq_teamcity import TeamCity, ApiException

    # username/password authentication
    tc = TeamCity("https://teamcity.example.com", auth=('username', 'password'))

    
    try:
        tc.debug_api.invalidate_current_session()
    except ApiException as e:
        print("Exception when calling DebugApi->invalidate_current_session: %s\n" % e)


This endpoint does not need any parameter.

Return type:
    void (empty response body)

`Back to top <#>`_

.. _list_db_tables:

list_db_tables
-----------------

.. code-block:: python

    from pprint import pprint
    from dohq_teamcity import TeamCity, ApiException

    # username/password authentication
    tc = TeamCity("https://teamcity.example.com", auth=('username', 'password'))

    
    try:
        api_response = tc.debug_api.list_db_tables()
       pprint(api_response)
    except ApiException as e:
        print("Exception when calling DebugApi->list_db_tables: %s\n" % e)


This endpoint does not need any parameter.

Return type:
    **str**

`Back to top <#>`_

.. _new_remember_me:

new_remember_me
-----------------

.. code-block:: python

    from pprint import pprint
    from dohq_teamcity import TeamCity, ApiException

    # username/password authentication
    tc = TeamCity("https://teamcity.example.com", auth=('username', 'password'))

    
    try:
        api_response = tc.debug_api.new_remember_me()
       pprint(api_response)
    except ApiException as e:
        print("Exception when calling DebugApi->new_remember_me: %s\n" % e)


This endpoint does not need any parameter.

Return type:
    **str**

`Back to top <#>`_

.. _post_request_details:

post_request_details
-----------------

.. code-block:: python

    from pprint import pprint
    from dohq_teamcity import TeamCity, ApiException

    # username/password authentication
    tc = TeamCity("https://teamcity.example.com", auth=('username', 'password'))

        extra = 'extra_example' # str | 

    try:
        api_response = tc.debug_api.post_request_details(extra)
       pprint(api_response)
    except ApiException as e:
        print("Exception when calling DebugApi->post_request_details: %s\n" % e)



.. list-table::
   :widths: 20 20 60
   :header-rows: 1

   * - Name
     - Types
     - Notes

   * - **extra**
     - **str**
     - 

Return type:
    **str**

`Back to top <#>`_

.. _put_request_details:

put_request_details
-----------------

.. code-block:: python

    from pprint import pprint
    from dohq_teamcity import TeamCity, ApiException

    # username/password authentication
    tc = TeamCity("https://teamcity.example.com", auth=('username', 'password'))

        extra = 'extra_example' # str | 

    try:
        api_response = tc.debug_api.put_request_details(extra)
       pprint(api_response)
    except ApiException as e:
        print("Exception when calling DebugApi->put_request_details: %s\n" % e)



.. list-table::
   :widths: 20 20 60
   :header-rows: 1

   * - Name
     - Types
     - Notes

   * - **extra**
     - **str**
     - 

Return type:
    **str**

`Back to top <#>`_

.. _save_memory_dump:

save_memory_dump
-----------------

.. code-block:: python

    from pprint import pprint
    from dohq_teamcity import TeamCity, ApiException

    # username/password authentication
    tc = TeamCity("https://teamcity.example.com", auth=('username', 'password'))

        archived = true # bool |  (optional)

    try:
        api_response = tc.debug_api.save_memory_dump(archived=archived)
       pprint(api_response)
    except ApiException as e:
        print("Exception when calling DebugApi->save_memory_dump: %s\n" % e)



.. list-table::
   :widths: 20 20 60
   :header-rows: 1

   * - Name
     - Types
     - Notes

   * - **archived**
     - **bool**
     - [optional] 

Return type:
    **str**

`Back to top <#>`_

.. _schedule_checking_for_changes:

schedule_checking_for_changes
-----------------

.. code-block:: python

    from pprint import pprint
    from dohq_teamcity import TeamCity, ApiException

    # username/password authentication
    tc = TeamCity("https://teamcity.example.com", auth=('username', 'password'))

        locator = 'locator_example' # str |  (optional)
    requestor = 'requestor_example' # str |  (optional)
    fields = 'fields_example' # str |  (optional)

    try:
        api_response = tc.debug_api.schedule_checking_for_changes(locator=locator, requestor=requestor, fields=fields)
       pprint(api_response)
    except ApiException as e:
        print("Exception when calling DebugApi->schedule_checking_for_changes: %s\n" % e)



.. list-table::
   :widths: 20 20 60
   :header-rows: 1

   * - Name
     - Types
     - Notes

   * - **locator**
     - **str**
     - [optional] 
   * - **requestor**
     - **str**
     - [optional] 
   * - **fields**
     - **str**
     - [optional] 

Return type:
    `VcsRootInstances <../models/VcsRootInstances.html>`_

`Back to top <#>`_

.. _set_current_session_max_inactive_interval:

set_current_session_max_inactive_interval
-----------------

.. code-block:: python

    from pprint import pprint
    from dohq_teamcity import TeamCity, ApiException

    # username/password authentication
    tc = TeamCity("https://teamcity.example.com", auth=('username', 'password'))

        body = 'body_example' # str |  (optional)

    try:
        api_response = tc.debug_api.set_current_session_max_inactive_interval(body=body)
       pprint(api_response)
    except ApiException as e:
        print("Exception when calling DebugApi->set_current_session_max_inactive_interval: %s\n" % e)



.. list-table::
   :widths: 20 20 60
   :header-rows: 1

   * - Name
     - Types
     - Notes

   * - **body**
     - **str**
     - [optional] 

Return type:
    **str**

`Back to top <#>`_

