dohq_teamcity.MuteApi
######################################

.. note::

   + All ``serve_*`` method have aliases with get: ``serve_something`` == ``get_something``
   + Some API have ``get`` method - default method to get object by locator (e.g ``agent_api.get('id:123')`` return ``Agent`` model by id
   + See more examples on page :doc:`/examples/api/MuteApi` and model examples
   + This is autogenerated page, don't change them directly, use template. Read more in :doc:`/development`

.. list-table::
   :widths: 20 80
   :header-rows: 1

   * - Method
     - HTTP request
   * - :ref:`create_instance`
     - **POST** ``/app/rest/mutes``
   * - :ref:`create_instances`
     - **POST** ``/app/rest/mutes/multiple``
   * - :ref:`delete_instance`
     - **DELETE** ``/app/rest/mutes/{muteLocator}``
   * - :ref:`get_mutes`
     - **GET** ``/app/rest/mutes``
   * - :ref:`serve_instance`
     - **GET** ``/app/rest/mutes/{muteLocator}``

.. _create_instance:

create_instance
-----------------

.. code-block:: python

    from pprint import pprint
    from dohq_teamcity import TeamCity, ApiException

    # username/password authentication
    tc = TeamCity("https://teamcity.example.com", auth=('username', 'password'))

    body = dohq_teamcity.Mute() # Mute |  (optional)
    fields = 'fields_example' # str |  (optional)

    try:
        api_response = tc.mute_api.create_instance(body=body, fields=fields)
       pprint(api_response)
    except ApiException as e:
        print("Exception when calling MuteApi->create_instance: %s\n" % e)



.. list-table::
   :widths: 20 20 60
   :header-rows: 1

   * - Name
     - Types
     - Notes

   * - **body**
     - `Mute <../models/Mute.html>`_
     - [optional] 
   * - **fields**
     - **str**
     - [optional] 

Return type:
    `Mute <../models/Mute.html>`_

`Back to top <#>`_

.. _create_instances:

create_instances
-----------------

.. code-block:: python

    from pprint import pprint
    from dohq_teamcity import TeamCity, ApiException

    # username/password authentication
    tc = TeamCity("https://teamcity.example.com", auth=('username', 'password'))

    body = dohq_teamcity.Mutes() # Mutes |  (optional)
    fields = 'fields_example' # str |  (optional)

    try:
        api_response = tc.mute_api.create_instances(body=body, fields=fields)
       pprint(api_response)
    except ApiException as e:
        print("Exception when calling MuteApi->create_instances: %s\n" % e)



.. list-table::
   :widths: 20 20 60
   :header-rows: 1

   * - Name
     - Types
     - Notes

   * - **body**
     - `Mutes <../models/Mutes.html>`_
     - [optional] 
   * - **fields**
     - **str**
     - [optional] 

Return type:
    `Mutes <../models/Mutes.html>`_

`Back to top <#>`_

.. _delete_instance:

delete_instance
-----------------

.. code-block:: python

    from pprint import pprint
    from dohq_teamcity import TeamCity, ApiException

    # username/password authentication
    tc = TeamCity("https://teamcity.example.com", auth=('username', 'password'))

    mute_locator = 'mute_locator_example' # str | 
    body = 'body_example' # str |  (optional)

    try:
        tc.mute_api.delete_instance(mute_locator, body=body)
    except ApiException as e:
        print("Exception when calling MuteApi->delete_instance: %s\n" % e)



.. list-table::
   :widths: 20 20 60
   :header-rows: 1

   * - Name
     - Types
     - Notes

   * - **mute_locator**
     - **str**
     - 
   * - **body**
     - **str**
     - [optional] 

Return type:
    void (empty response body)

`Back to top <#>`_

.. _get_mutes:

get_mutes
-----------------

.. code-block:: python

    from pprint import pprint
    from dohq_teamcity import TeamCity, ApiException

    # username/password authentication
    tc = TeamCity("https://teamcity.example.com", auth=('username', 'password'))

    locator = 'locator_example' # str |  (optional)
    fields = 'fields_example' # str |  (optional)

    try:
        api_response = tc.mute_api.get_mutes(locator=locator, fields=fields)
       pprint(api_response)
    except ApiException as e:
        print("Exception when calling MuteApi->get_mutes: %s\n" % e)



.. list-table::
   :widths: 20 20 60
   :header-rows: 1

   * - Name
     - Types
     - Notes

   * - **locator**
     - **str**
     - [optional] 
   * - **fields**
     - **str**
     - [optional] 

Return type:
    `Mutes <../models/Mutes.html>`_

`Back to top <#>`_

.. _serve_instance:

serve_instance
-----------------

.. code-block:: python

    from pprint import pprint
    from dohq_teamcity import TeamCity, ApiException

    # username/password authentication
    tc = TeamCity("https://teamcity.example.com", auth=('username', 'password'))

    mute_locator = 'mute_locator_example' # str | 
    fields = 'fields_example' # str |  (optional)

    try:
        api_response = tc.mute_api.serve_instance(mute_locator, fields=fields)
       pprint(api_response)
    except ApiException as e:
        print("Exception when calling MuteApi->serve_instance: %s\n" % e)



.. list-table::
   :widths: 20 20 60
   :header-rows: 1

   * - Name
     - Types
     - Notes

   * - **mute_locator**
     - **str**
     - 
   * - **fields**
     - **str**
     - [optional] 

Return type:
    `Mute <../models/Mute.html>`_

`Back to top <#>`_

